;
; File generated by cc65 v 2.19 - Git 39619b629
;
	.fopt		compiler,"cc65 v 2.19 - Git 39619b629"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_flt_round
	.import		_flt_sin
	.import		_flt_cos
	.import		_flt_add
	.import		_flt_subtract
	.import		_flt_multiply
	.import		_flt_divide
	.import		_flt_add_into
	.import		_flt_subtract_into
	.import		_flt_ltof
	.import		_flt_ftol
	.import		_malloc
	.import		_bsearch
	.import		_exit
	.import		_qsort
	.import		_stdout
	.import		_stderr
	.import		_fclose
	.import		_fopen
	.import		_fputc
	.import		_fputs
	.import		_fwrite
	.import		_strchr
	.import		_strlen
	.export		_strings0
	.export		_arena_vertices0
	.export		_arenas0
	.export		_vehicle_vertices0
	.export		_vehicles0
	.export		_levels0
	.export		_main

.segment	"DATA"

_strings0:
	.addr	S0001
	.addr	S0002
	.addr	S0003
	.addr	S0004
	.addr	S0005
	.addr	S0006
_arena_vertices0:
	.addr	S0007
_arenas0:
	.addr	S0008
	.addr	S0009
	.addr	S000A
	.addr	S000B
	.addr	S000C
	.addr	S000D
_vehicle_vertices0:
	.addr	S000E
_vehicles0:
	.addr	S000F
	.addr	S0010
	.addr	S0011
	.addr	S0012
	.addr	S0013
	.addr	S0014
	.addr	S0015
	.addr	S0016
	.addr	S0017
	.addr	S0018
	.addr	S0019

.segment	"RODATA"

_levels0:
	.byte	$00
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$06
	.byte	$00
	.byte	$03
	.byte	$01
	.byte	$01
	.byte	$01
	.byte	$02
	.byte	$06
	.byte	$00
	.byte	$03
	.byte	$02
	.byte	$02
	.byte	$01
	.byte	$01
	.byte	$07
	.byte	$01
	.byte	$05
	.byte	$03
	.byte	$03
	.byte	$01
	.byte	$02
	.byte	$07
	.byte	$01
	.byte	$05
	.byte	$04
	.byte	$04
	.byte	$01
	.byte	$01
	.byte	$08
	.byte	$02
	.byte	$08
	.byte	$05
	.byte	$05
	.byte	$01
	.byte	$02
	.byte	$08
	.byte	$02
	.byte	$08
S0019:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$40,$20,$20,$20,$20,$20
	.byte	$40,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$40,$20,$20,$20,$20,$20,$40,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$00
S0018:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$40,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$40,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$40,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$40,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$00
S0017:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$40,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$2B,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20
	.byte	$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$40,$20,$20,$20,$20,$20,$40,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B
	.byte	$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$2B,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$2B,$40,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$00
S0016:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$40,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$40,$20,$20,$20,$20,$20,$40,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$00
S0015:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$40,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$40,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$00
S0014:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$40,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$40,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$40,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$40,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20
	.byte	$2B,$20,$20,$20,$20,$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$2B,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$2B,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$2B,$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$2B,$2B,$20,$20
	.byte	$2B,$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$2B,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$40,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$40,$20,$20,$20
	.byte	$20,$00
S0011:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$40,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$40,$2B,$2B,$2B,$2B,$2B,$2B
	.byte	$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B
	.byte	$2B,$40,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$2B,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$2B,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$40,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$00
S0010:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$40,$2B,$2B,$2B,$2B,$2B,$2B,$2B
	.byte	$40,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$40,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$2B,$20
	.byte	$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$2B,$20,$20,$20,$2B,$20,$20,$2B,$20,$2B,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$2B,$20,$2B
	.byte	$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$2B,$2B,$40,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$40,$00
S000F:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$40,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$40,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$40
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$40
	.byte	$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$2B,$40,$20,$20,$20,$20,$20,$20
	.byte	$20,$00
S0013:
	.byte	$20,$20,$20,$20,$20,$20,$40,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$40,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$40,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$2B,$2B,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$2B
	.byte	$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20
	.byte	$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B
	.byte	$20,$20,$20,$2B,$20,$20,$2B,$20,$20,$2B,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$2B,$20,$2B,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$2B,$2B,$2B,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$2B
	.byte	$40,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$40,$20,$2B,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$2B,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$2B,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$40,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$00
S0012:
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$40,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$2B,$20
	.byte	$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$2B,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$2B,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$20,$20,$2B,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$2B,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$2B,$40,$2B,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$2B,$20,$20,$20,$20,$2B,$20,$20,$20,$20,$20,$20,$2B,$2B,$20
	.byte	$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$2B,$20,$20,$20,$2B,$20
	.byte	$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20
	.byte	$20,$20,$20,$20,$2B,$20,$20,$2B,$20,$20,$20,$2B,$2B,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B,$20,$20,$20,$2B,$20,$2B
	.byte	$20,$20,$2B,$2B,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$2B,$2B,$20,$20,$2B,$40,$2B,$2B,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$2B,$2B
	.byte	$40,$00
S000D:
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$2A,$2A,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$2A,$2A,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$2A,$2A,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$2A,$2A,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$00
S000B:
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$26,$2D,$2D,$2D,$2D,$2D,$2D,$26,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$24,$2D,$2D,$2D,$2D,$24,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$24,$2D,$2D,$2D,$2D,$24,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$26,$2D,$2D,$2D,$2D,$2D,$2D,$26,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$00
S000A:
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$2A,$20,$20,$20,$20,$20,$20,$20,$20,$2A,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$2A,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2A,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$2A,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2A,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$2A,$20,$20,$20,$20,$20,$20,$20,$20,$2A,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$00
S0009:
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$23,$20,$20,$20,$20,$20,$20,$20,$20,$23,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$25,$20,$20,$25,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$DD,$20,$20,$25,$20,$20,$25,$20,$20,$DD,$20,$20,$DD
	.byte	$DD,$20,$20,$23,$20,$20,$20,$20,$20,$20,$20,$20,$23,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$00
S0008:
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$23,$2D,$2D,$2D,$2D,$2D,$2D,$23,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$23,$20,$20,$20,$20,$20,$20,$23,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$23,$20,$20,$20,$20,$20,$20,$23,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$23,$2D,$2D,$2D,$2D,$2D,$2D,$23,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$00
S000C:
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$24,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$24,$2D,$2D,$24,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$24,$2D,$2D,$24,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$DD,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$24,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$DD,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$DD
	.byte	$2B,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D,$2B
	.byte	$00
S0001:
	.byte	$0D,$D4,$48,$45,$20,$44,$41,$54,$41,$20,$46,$49,$4C,$45,$20,$48
	.byte	$41,$53,$20,$42,$45,$45,$4E,$20,$45,$52,$41,$53,$45,$44,$20,$4F
	.byte	$52,$0D,$52,$45,$4E,$41,$4D,$45,$44,$2E,$20,$D2,$45,$43,$52,$45
	.byte	$41,$54,$45,$20,$4F,$52,$20,$52,$45,$53,$54,$4F,$52,$45,$20,$46
	.byte	$52,$4F,$4D,$0D,$42,$41,$43,$4B,$55,$50,$2E,$0D,$00
S0002:
	.byte	$0D,$D4,$48,$45,$20,$44,$41,$54,$41,$20,$46,$49,$4C,$45,$20,$48
	.byte	$41,$53,$20,$42,$45,$45,$4E,$20,$43,$4F,$52,$52,$55,$50,$54,$45
	.byte	$44,$2E,$0D,$D2,$45,$43,$52,$45,$41,$54,$45,$20,$4F,$52,$20,$52
	.byte	$45,$53,$54,$4F,$52,$45,$20,$46,$52,$4F,$4D,$20,$42,$41,$43,$4B
	.byte	$55,$50,$2E,$0D,$00
S0005:
	.byte	$0D,$D4,$48,$45,$52,$45,$20,$57,$41,$53,$20,$41,$4E,$20,$41,$54
	.byte	$54,$45,$4D,$50,$54,$20,$54,$4F,$20,$41,$43,$43,$45,$53,$53,$20
	.byte	$41,$4E,$20,$41,$52,$52,$41,$59,$0D,$4F,$55,$54,$20,$4F,$46,$20
	.byte	$42,$4F,$55,$4E,$44,$53,$2E,$0D,$00
S0004:
	.byte	$0D,$D4,$48,$45,$52,$45,$20,$49,$53,$20,$41,$20,$50,$52,$4F,$42
	.byte	$4C,$45,$4D,$20,$49,$4E,$56,$4F,$4C,$56,$49,$4E,$47,$20,$47,$52
	.byte	$41,$50,$48,$49,$43,$53,$0D,$49,$4E,$49,$54,$49,$41,$4C,$49,$5A
	.byte	$41,$54,$49,$4F,$4E,$2E,$0D,$00
S0003:
	.byte	$0D,$C1,$20,$42,$41,$4E,$4B,$45,$44,$20,$4D,$45,$4D,$4F,$52,$59
	.byte	$20,$52,$45,$51,$55,$45,$53,$54,$20,$4C,$41,$52,$47,$45,$52,$20
	.byte	$54,$48,$41,$4E,$20,$38,$CB,$0D,$57,$41,$53,$20,$52,$45,$51,$55
	.byte	$45,$53,$54,$45,$44,$2E,$0D,$00
S0006:
	.byte	$0D,$D4,$48,$45,$20,$44,$49,$53,$50,$4C,$41,$59,$20,$43,$4F,$4E
	.byte	$46,$49,$47,$55,$52,$41,$54,$49,$4F,$4E,$20,$48,$41,$53,$20,$42
	.byte	$45,$45,$4E,$0D,$43,$4F,$52,$52,$55,$50,$54,$45,$44,$2E,$0D,$00
S001C:
	.byte	$0D,$C3,$4F,$55,$4C,$44,$20,$4E,$4F,$54,$20,$43,$52,$45,$41,$54
	.byte	$45,$20,$C5,$D8,$D0,$CC,$CF,$D2,$C5,$2E,$C4,$C1,$D4,$21,$0D,$00
S0032:
	.byte	$0D,$C9,$4E,$43,$52,$45,$41,$53,$45,$20,$CD,$C1,$D8,$A4,$D6,$C5
	.byte	$C8,$A4,$D6,$C5,$D2,$D4,$C9,$C3,$C5,$D3,$21,$0D,$00
S0033:
	.byte	$0D,$C9,$4E,$43,$52,$45,$41,$53,$45,$20,$CD,$C1,$D8,$A4,$D6,$C5
	.byte	$C8,$A4,$D3,$C5,$C7,$CD,$C5,$CE,$D4,$D3,$21,$0D,$00
S001D:
	.byte	$0D,$C5,$52,$52,$4F,$52,$20,$CD,$45,$53,$53,$41,$47,$45,$53,$20
	.byte	$00
S002F:
	.byte	$D6,$45,$48,$49,$43,$4C,$45,$20,$C4,$41,$54,$41,$00
S0021:
	.byte	$C1,$52,$45,$4E,$41,$20,$C4,$41,$54,$41,$20,$00
S001A:
	.byte	$45,$58,$50,$4C,$4F,$52,$45,$2E,$44,$41,$54,$00
S0034:
	.byte	$CC,$45,$56,$45,$4C,$20,$C4,$41,$54,$41,$00
S001F:
	.byte	$D4,$52,$49,$47,$20,$C4,$41,$54,$41,$20,$00
S0007:
	.byte	$21,$23,$24,$25,$26,$2A,$2B,$00
S0022:
	.byte	$20,$44,$4F,$4E,$45,$0D,$00
S0035	:=	S0022+0
S0031	:=	S0022+0
S0020	:=	S0022+0
S002A:
	.byte	$0D,$20,$20,$38,$20,$00
S002B:
	.byte	$0D,$20,$20,$39,$20,$00
S002C:
	.byte	$0D,$20,$31,$30,$20,$00
S002D:
	.byte	$0D,$20,$31,$31,$20,$00
S002E:
	.byte	$0D,$20,$31,$32,$20,$00
S0024:
	.byte	$0D,$20,$20,$32,$20,$00
S001E	:=	S0022+1
S0028:
	.byte	$0D,$20,$20,$36,$20,$00
S0023:
	.byte	$0D,$20,$20,$31,$20,$00
S0027:
	.byte	$0D,$20,$20,$35,$20,$00
S0026:
	.byte	$0D,$20,$20,$34,$20,$00
S0029:
	.byte	$0D,$20,$20,$37,$20,$00
S0025:
	.byte	$0D,$20,$20,$33,$20,$00
S001B:
	.byte	$57,$42,$00
S0030:
	.byte	$20,$2A,$00
S000E	:=	S0010+624

; ---------------------------------------------------------------
; void __near__ OutputStrings (struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputStrings: near

.segment	"CODE"

	jsr     pushax
	lda     #<(_strings0)
	ldx     #>(_strings0)
	jsr     pushax
	jsr     decsp8
	ldx     #$00
	lda     #$06
	jsr     pushax
	lda     #<(S001D)
	ldx     #>(S001D)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     _fputc
	ldx     #$00
	lda     #$00
	ldy     #$08
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$02
	jsr     staxysp
L0002:	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosltax
	jne     L0005
	jmp     L0003
L0005:	ldy     #$0B
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	ldy     #$01
	jsr     ldaxidx
	jsr     _strlen
	ldy     #$04
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     tosltax
	jeq     L0004
	ldy     #$05
	jsr     ldaxysp
	ldy     #$02
	jsr     staxysp
L0004:	ldy     #$08
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0002
L0003:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$13
	jsr     ldaxysp
	jsr     _fwrite
	ldx     #$00
	lda     #$00
	ldy     #$08
	jsr     staxysp
L0007:	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosltax
	jne     L000A
	jmp     L0008
L000A:	ldy     #$0B
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	ldy     #$01
	jsr     ldaxidx
	jsr     _strlen
	ldy     #$04
	jsr     staxysp
	ldy     #$0B
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     _fputs
	ldy     #$05
	jsr     ldaxysp
	ldy     #$06
	jsr     staxysp
L000B:	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     tosltax
	jne     L000E
	jmp     L0009
L000E:	ldx     #$00
	lda     #$00
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     _fputc
	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L000B
L0009:	ldy     #$08
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0007
L0008:	lda     #<(S001E)
	ldx     #>(S001E)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldy     #$0E
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ OutputTrigData (struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputTrigData: near

.segment	"CODE"

	jsr     pushax
	ldy     #$0C
	jsr     subysp
	lda     #<(S001F)
	ldx     #>(S001F)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     _fputc
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$00
	ldy     #$04
	jsr     steaxysp
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	lda     #$00
	jsr     pusheax
	ldx     #$0F
	lda     #$49
	sta     sreg
	lda     #$40
	sta     sreg+1
	lda     #$DB
	jsr     _flt_multiply
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$44
	sta     sreg+1
	lda     #$00
	jsr     _flt_divide
	ldy     #$00
	jsr     steaxysp
	ldx     #$00
	lda     #$00
	ldy     #$0A
	jsr     staxysp
L0002:	ldy     #$0B
	jsr     ldaxysp
	cmp     #$00
	txa
	sbc     #$02
	bvc     L0006
	eor     #$80
L0006:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0005
	jmp     L0003
L0005:	ldy     #$07
	jsr     ldeaxysp
	jsr     _flt_sin
	jsr     pusheax
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$45
	sta     sreg+1
	lda     #$00
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$08
	jsr     staxysp
	lda     #$08
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$13
	jsr     ldaxysp
	jsr     _fwrite
	ldy     #$0B
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$20
	jsr     tosmodax
	cpx     #$00
	bne     L0008
	cmp     #$1F
L0008:	jsr     booleq
	jeq     L0004
	ldx     #$00
	lda     #$2A
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputc
L0004:	ldy     #$0A
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldy     #$05
	jsr     ldeaxysp
	jsr     _flt_add_into
	jmp     L0002
L0003:	lda     #<(S0020)
	ldx     #>(S0020)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldy     #$0E
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ OutputArenaData (struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputArenaData: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp4
	ldx     #$00
	lda     #$00
	jsr     pushax
	ldx     #$00
	lda     #$00
	jsr     pushax
	jsr     decsp2
	lda     #<(S0021)
	ldx     #>(S0021)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldx     #$00
	lda     #$03
	jsr     pushax
	ldy     #$0D
	jsr     ldaxysp
	jsr     _fputc
	ldx     #$00
	lda     #$06
	ldy     #$06
	jsr     staxysp
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _fwrite
	ldx     #$00
	lda     #$00
	ldy     #$08
	jsr     staxysp
L0002:	ldy     #$09
	jsr     ldaxysp
	cpx     #$00
	bne     L0006
	cmp     #$06
L0006:	jsr     boolult
	jne     L0005
	jmp     L0003
L0005:	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_arenas0)
	tay
	txa
	adc     #>(_arenas0)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     _CountArenaVertices
	ldy     #$06
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     tosltax
	jeq     L0007
	ldy     #$07
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
L0007:	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_arenas0)
	tay
	txa
	adc     #>(_arenas0)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     _CountArenaSegments
	ldy     #$06
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     tosltax
	jeq     L0004
	ldy     #$07
	jsr     ldaxysp
	ldy     #$02
	jsr     staxysp
L0004:	ldy     #$08
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0002
L0003:	ldy     #$05
	jsr     ldaxysp
	ina
	bne     L0009
	inx
L0009:	jsr     mulax6
	jsr     pushax
	ldx     #$02
	lda     #$00
	jsr     tosaddax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ina
	bne     L000A
	inx
L000A:	jsr     shlax2
	jsr     tosaddax
	ldy     #$06
	jsr     staxysp
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _fwrite
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _fwrite
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _fwrite
	ldx     #$00
	lda     #$2A
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputc
	ldx     #$00
	lda     #$00
	ldy     #$08
	jsr     staxysp
L000B:	ldy     #$09
	jsr     ldaxysp
	cpx     #$00
	bne     L000F
	cmp     #$06
L000F:	jsr     boolult
	jne     L000E
	jmp     L000C
L000E:	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_arenas0)
	tay
	txa
	adc     #>(_arenas0)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$0D
	jsr     ldaxysp
	jsr     _OutputArena16x16
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_arenas0)
	tay
	txa
	adc     #>(_arenas0)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ina
	bne     L0010
	inx
L0010:	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     _OutputArenaVertices
	ldy     #$00
	jsr     staxysp
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_arenas0)
	tay
	txa
	adc     #>(_arenas0)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ina
	bne     L0011
	inx
L0011:	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _OutputArenaSegments
	ldx     #$00
	lda     #$2A
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputc
	ldy     #$08
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L000B
L000C:	lda     #<(S0022)
	ldx     #>(S0022)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldy     #$0C
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ OutputVehicleData (struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputVehicleData: near

.segment	"CODE"

	jsr     pushax
	ldy     #$0A
	jsr     subysp
	lda     #<(S002F)
	ldx     #>(S002F)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldx     #$00
	lda     #$04
	jsr     pushax
	ldy     #$0D
	jsr     ldaxysp
	jsr     _fputc
	ldx     #$00
	lda     #$0B
	ldy     #$06
	jsr     staxysp
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _fwrite
	ldx     #$00
	lda     #$06
	ldy     #$04
	jsr     staxysp
	ldx     #$00
	lda     #$06
	ldy     #$02
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	ina
	bne     L0002
	inx
L0002:	jsr     shlax2
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     shlax1
	jsr     shlax3
	jsr     shlax4
	jsr     shlax1
	jsr     tosaddax
	ldy     #$06
	jsr     staxysp
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _fwrite
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _fwrite
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _fwrite
	lda     #<(S0030)
	ldx     #>(S0030)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldx     #$00
	lda     #$00
	ldy     #$08
	jsr     staxysp
L0003:	ldy     #$09
	jsr     ldaxysp
	cpx     #$00
	bne     L0007
	cmp     #$0B
L0007:	jsr     boolult
	jne     L0006
	jmp     L0004
L0006:	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(M0001)
	tay
	txa
	adc     #>(M0001)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_vehicles0)
	tay
	txa
	adc     #>(_vehicles0)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ina
	bne     L0008
	inx
L0008:	jsr     _GetVehicleVertices
	ldy     #$00
	jsr     staxysp
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_vehicles0)
	tay
	txa
	adc     #>(_vehicles0)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ina
	bne     L0009
	inx
L0009:	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _OutputVehicleSegments
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_vehicles0)
	tay
	txa
	adc     #>(_vehicles0)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _OutputVehicleVertices
	ldy     #$08
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0003
L0004:	lda     #<(S0031)
	ldx     #>(S0031)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldy     #$0C
	jsr     addysp
	rts

.segment	"DATA"

M0001:
	.addr	S0023
	.addr	S0024
	.addr	S0025
	.addr	S0026
	.addr	S0027
	.addr	S0028
	.addr	S0029
	.addr	S002A
	.addr	S002B
	.addr	S002C
	.addr	S002D
	.addr	S002E

.endproc

; ---------------------------------------------------------------
; void __near__ OutputLevelData (struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputLevelData: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp2
	lda     #<(S0034)
	ldx     #>(S0034)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	ldx     #$00
	lda     #$05
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _fputc
	ldx     #$00
	lda     #$06
	ldy     #$00
	jsr     staxysp
	lda     sp
	ldx     sp+1
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     _fwrite
	lda     #<(_levels0)
	ldx     #>(_levels0)
	jsr     pushax
	ldx     #$00
	lda     #$01
	jsr     pushax
	ldx     #$00
	lda     #$2A
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     _fwrite
	lda     #<(S0035)
	ldx     #>(S0035)
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputs
	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ OutputArena16x16 (const char *arena, struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputArena16x16: near

.segment	"CODE"

	jsr     pushax
	ldy     #$0B
	jsr     subysp
	lda     M0001
	ldx     M0001+1
	jsr     bnegax
	jeq     L0002
	ldx     #$02
	lda     #$00
	jsr     _malloc
	sta     M0001
	stx     M0001+1
L0002:	ldx     #$00
	lda     #$00
	ldy     #$06
	jsr     staxysp
L0003:	ldy     #$07
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0007
	eor     #$80
L0007:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0006
	jmp     L0004
L0006:	ldx     #$00
	lda     #$00
	ldy     #$08
	jsr     staxysp
L0008:	ldy     #$09
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L000C
	eor     #$80
L000C:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L000B
	jmp     L0005
L000B:	ldy     #$0E
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	ldy     #$0A
	sta     (sp),y
	lda     _arena_vertices0
	ldx     _arena_vertices0+1
	jsr     pushax
	ldy     #$0C
	ldx     #$00
	lda     (sp),y
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	jeq     L000D
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$46
	sta     sreg+1
	lda     #$00
	jsr     pusheax
	ldx     #$99
	stx     sreg
	lda     #$3D
	sta     sreg+1
	lda     #$9A
	jsr     pusheax
	ldy     #$12
	ldx     #$00
	lda     (sp),y
	jsr     axulong
	jsr     _flt_ltof
	jsr     _flt_multiply
	jsr     pusheax
	ldx     #$66
	lda     #$0E
	sta     sreg
	lda     #$40
	sta     sreg+1
	lda     #$66
	jsr     _flt_subtract
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$00
	jsr     staxysp
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax4
	jsr     pushax
	ldy     #$0D
	jsr     ldaxysp
	jsr     tosaddax
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	jsr     staxspidx
	ldy     #$09
	jsr     ldaxysp
	ina
	bne     L0012
	inx
L0012:	ldy     #$04
	jsr     staxysp
L000E:	ldy     #$0E
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	cmp     #$2D
	jsr     booleq
	jne     L0011
	jmp     L000F
L0011:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax4
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     tosaddax
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	jsr     staxspidx
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L000E
L000F:	ldy     #$07
	jsr     ldaxysp
	ina
	bne     L0017
	inx
L0017:	ldy     #$02
	jsr     staxysp
L0013:	ldy     #$0E
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	cmp     #$DD
	jsr     booleq
	jne     L0016
	jmp     L0014
L0016:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     aslax4
	jsr     pushax
	ldy     #$0D
	jsr     ldaxysp
	jsr     tosaddax
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	jsr     staxspidx
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0013
L0014:	jmp     L000A
L000D:	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	cmp     #$20
	jsr     booleq
	jeq     L000A
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax4
	jsr     pushax
	ldy     #$0D
	jsr     ldaxysp
	jsr     tosaddax
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxspidx
L000A:	ldy     #$08
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0008
L0005:	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0003
L0004:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldx     #$01
	lda     #$00
	jsr     pushax
	ldy     #$12
	jsr     ldaxysp
	jsr     _fwrite
	ldy     #$0F
	jsr     addysp
	rts

.segment	"DATA"

M0001:
	.word	$0000

.endproc

; ---------------------------------------------------------------
; struct $anon-struct-0009 *__near__ OutputArenaVertices (const char *arena, int limit, struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputArenaVertices: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp7
	lda     M0001
	ldx     M0001+1
	jsr     bnegax
	jeq     L0002
	ldy     #$0A
	jsr     ldaxysp
	jsr     mulax6
	jsr     _malloc
	sta     M0001
	stx     M0001+1
L0002:	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$04
	jsr     staxysp
L0003:	ldy     #$01
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0007
	eor     #$80
L0007:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0006
	jmp     L0004
L0006:	ldx     #$00
	lda     #$00
	ldy     #$02
	jsr     staxysp
L0008:	ldy     #$03
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L000C
	eor     #$80
L000C:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L000B
	jmp     L0005
L000B:	ldy     #$0C
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	ldy     #$06
	sta     (sp),y
	lda     _arena_vertices0
	ldx     _arena_vertices0+1
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	jeq     L000A
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$44
	sta     sreg+1
	lda     #$00
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$00
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$44
	sta     sreg+1
	lda     #$00
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$02
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$46
	sta     sreg+1
	lda     #$00
	jsr     pusheax
	ldx     #$99
	stx     sreg
	lda     #$3D
	sta     sreg+1
	lda     #$9A
	jsr     pusheax
	ldy     #$10
	ldx     #$00
	lda     (sp),y
	jsr     axulong
	jsr     _flt_ltof
	jsr     _flt_multiply
	jsr     pusheax
	ldx     #$66
	lda     #$0E
	sta     sreg
	lda     #$40
	sta     sreg+1
	lda     #$66
	jsr     _flt_subtract
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$04
	jsr     staxspidx
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     decax1
	jsr     mulax6
	jsr     tosaddax
	ldy     #$01
	jsr     ldaxidx
	ldy     #$00
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     decax1
	jsr     mulax6
	jsr     tosaddax
	ldy     #$03
	jsr     ldaxidx
	ldy     #$02
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	ldx     #$00
	lda     #$00
	ldy     #$04
	jsr     staxspidx
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L000A:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0008
L0005:	ldy     #$00
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0003
L0004:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$06
	jsr     pushax
	lda     #<(_CompareArenaVertices)
	ldx     #>(_CompareArenaVertices)
	jsr     _qsort
L000E:	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0C
	jsr     ldaxysp
	jsr     tosltax
	jne     L0011
	jmp     L000F
L0011:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	jsr     pushax
	ldx     #$FF
	lda     #$FF
	ldy     #$00
	jsr     staxspidx
	ldy     #$02
	jsr     staxspidx
	ldy     #$04
	jsr     staxspidx
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L000E
L000F:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldx     #$00
	lda     #$06
	jsr     pushax
	ldy     #$0E
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0E
	jsr     ldaxysp
	jsr     _fwrite
	lda     M0001
	ldx     M0001+1
	jmp     L0001
L0001:	ldy     #$0D
	jsr     addysp
	rts

.segment	"DATA"

M0001:
	.word	$0000

.endproc

; ---------------------------------------------------------------
; void __near__ OutputArenaSegments (const char *arena, struct $anon-struct-0009 *vertices, int limit, struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputArenaSegments: near

.segment	"CODE"

	jsr     pushax
	ldy     #$1F
	jsr     subysp
	lda     M0001
	ldx     M0001+1
	jsr     bnegax
	jeq     L0002
	ldy     #$22
	jsr     ldaxysp
	jsr     shlax2
	jsr     _malloc
	sta     M0001
	stx     M0001+1
L0002:	ldy     #$26
	jsr     ldaxysp
	jsr     _CountArenaVertices
	ldy     #$12
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$18
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$1C
	jsr     staxysp
L0003:	ldy     #$19
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0007
	eor     #$80
L0007:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0006
	jmp     L0004
L0006:	ldx     #$00
	lda     #$00
	ldy     #$1A
	jsr     staxysp
L0008:	ldy     #$1B
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L000C
	eor     #$80
L000C:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L000B
	jmp     L0005
L000B:	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	ldy     #$1E
	sta     (sp),y
	lda     _arena_vertices0
	ldx     _arena_vertices0+1
	jsr     pushax
	ldy     #$20
	ldx     #$00
	lda     (sp),y
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	jeq     L000A
	ldy     #$1B
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$44
	sta     sreg+1
	lda     #$00
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$06
	jsr     staxysp
	ldy     #$0C
	jsr     staxysp
	ldy     #$19
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$44
	sta     sreg+1
	lda     #$00
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$08
	jsr     staxysp
	ldy     #$0E
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$10
	jsr     staxysp
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$46
	sta     sreg+1
	lda     #$00
	jsr     pusheax
	ldx     #$99
	stx     sreg
	lda     #$3D
	sta     sreg+1
	lda     #$9A
	jsr     pusheax
	ldy     #$26
	ldx     #$00
	lda     (sp),y
	jsr     axulong
	jsr     _flt_ltof
	jsr     _flt_multiply
	jsr     pusheax
	ldx     #$66
	lda     #$0E
	sta     sreg
	lda     #$40
	sta     sreg+1
	lda     #$66
	jsr     _flt_subtract
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$0A
	jsr     staxysp
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$10
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$00
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$02
	jsr     staxspidx
	ldy     #$1C
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldy     #$1B
	jsr     ldaxysp
	ina
	bne     L0012
	inx
L0012:	ldy     #$16
	jsr     staxysp
L000E:	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	cmp     #$2D
	jsr     booleq
	jne     L0010
	jmp     L000F
L0010:	ldy     #$16
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L000E
L000F:	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	jsr     pushax
	ldy     #$20
	ldx     #$00
	lda     (sp),y
	jsr     toseqax
	jeq     L0013
	ldy     #$17
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$44
	sta     sreg+1
	lda     #$00
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$00
	jsr     staxysp
	ldy     #$09
	jsr     ldaxysp
	ldy     #$02
	jsr     staxysp
	ldy     #$0B
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$00
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$02
	jsr     staxspidx
	ldy     #$1C
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldx     #$00
	lda     #$00
	ldy     #$04
	jsr     staxysp
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$10
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$00
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$02
	jsr     staxspidx
	ldy     #$1C
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0013:	ldy     #$19
	jsr     ldaxysp
	ina
	bne     L0018
	inx
L0018:	ldy     #$14
	jsr     staxysp
L0014:	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	cmp     #$DD
	jsr     booleq
	jne     L0016
	jmp     L0015
L0016:	ldy     #$14
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0014
L0015:	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	jsr     pushax
	ldy     #$20
	ldx     #$00
	lda     (sp),y
	jsr     toseqax
	jeq     L000A
	ldy     #$07
	jsr     ldaxysp
	ldy     #$00
	jsr     staxysp
	ldy     #$15
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	lda     #$80
	sta     sreg
	lda     #$44
	sta     sreg+1
	lda     #$00
	jsr     _flt_multiply
	jsr     _flt_ftol
	ldy     #$02
	jsr     staxysp
	ldy     #$0B
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$00
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$02
	jsr     staxspidx
	ldy     #$1C
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldx     #$00
	lda     #$00
	ldy     #$04
	jsr     staxysp
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$10
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$00
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	jsr     _IndexOfArenaVertex
	ldy     #$02
	jsr     staxspidx
	ldy     #$1C
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L000A:	ldy     #$1A
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0008
L0005:	ldy     #$18
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0003
L0004:	ldy     #$1D
	jsr     ldaxysp
	jsr     pushax
	ldy     #$24
	jsr     ldaxysp
	jsr     tosltax
	jne     L001D
	jmp     L001B
L001D:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$21
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldx     #$FF
	lda     #$FF
	ldy     #$02
	jsr     staxspidx
	ldy     #$00
	jsr     staxspidx
	ldy     #$1C
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0004
L001B:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     pushax
	ldy     #$26
	jsr     ldaxysp
	jsr     _fwrite
	ldy     #$27
	jsr     addysp
	rts

.segment	"DATA"

M0001:
	.word	$0000

.endproc

; ---------------------------------------------------------------
; int __near__ CountArenaVertices (const char *arena)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CountArenaVertices: near

.segment	"CODE"

	jsr     pushax
	ldx     #$00
	lda     #$00
	jsr     pushax
	jmp     L0004
L0002:	lda     _arena_vertices0
	ldx     _arena_vertices0+1
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$00
	jsr     ldauidx
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	jeq     L0005
	ldy     #$00
	ldx     #$00
	lda     #$02
	jsr     addeqysp
L0005:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0004:	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	jsr     ldauidx
	jne     L0002
	ldy     #$01
	jsr     ldaxysp
	jmp     L0001
L0001:	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ CountArenaSegments (const char *arena)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CountArenaSegments: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp6
	ldx     #$00
	lda     #$00
	jsr     pushax
	ldx     #$00
	lda     #$00
	ldy     #$02
	jsr     staxysp
L0002:	ldy     #$03
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0006
	eor     #$80
L0006:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0005
	jmp     L0003
L0005:	ldx     #$00
	lda     #$00
	ldy     #$04
	jsr     staxysp
L0007:	ldy     #$05
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L000B
	eor     #$80
L000B:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L000A
	jmp     L0004
L000A:	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	ldy     #$07
	sta     (sp),y
	lda     _arena_vertices0
	ldx     _arena_vertices0+1
	jsr     pushax
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	jeq     L0009
	ldy     #$00
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ina
	bne     L000D
	inx
L000D:	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     _ArenaCharacterAt
	ldy     #$06
	sta     (sp),y
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	cmp     #$2D
	jsr     booleq
	jne     L000F
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     toseqax
	jne     L000F
	ldx     #$00
	lda     #$00
	jeq     L0010
L000F:	ldx     #$00
	lda     #$01
L0010:	jeq     L000E
	ldy     #$00
	ldx     #$00
	lda     #$02
	jsr     addeqysp
L000E:	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ina
	bne     L0011
	inx
L0011:	jsr     _ArenaCharacterAt
	ldy     #$06
	sta     (sp),y
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	cmp     #$DD
	jsr     booleq
	jne     L0013
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     pushax
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     toseqax
	jne     L0013
	ldx     #$00
	lda     #$00
	jeq     L0014
L0013:	ldx     #$00
	lda     #$01
L0014:	jeq     L0009
	ldy     #$00
	ldx     #$00
	lda     #$02
	jsr     addeqysp
L0009:	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0007
L0004:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0002
L0003:	ldy     #$01
	jsr     ldaxysp
	jmp     L0001
L0001:	ldy     #$0A
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; char __near__ ArenaCharacterAt (const char *arena, int x, int y)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ArenaCharacterAt: near

.segment	"CODE"

	jsr     pushax
	lda     #$20
	jsr     pusha
	ldy     #$02
	jsr     ldaxysp
	txa
	jsr     boolge
	jeq     L0003
	ldy     #$02
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0004
	eor     #$80
L0004:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L0003
	ldy     #$04
	jsr     ldaxysp
	txa
	jsr     boolge
	jeq     L0003
	ldy     #$04
	jsr     ldaxysp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L0005
	eor     #$80
L0005:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0006
L0003:	ldx     #$00
	lda     #$00
	jeq     L0007
L0006:	ldx     #$00
	lda     #$01
L0007:	jeq     L0002
	ldy     #$06
	jsr     ldaxysp
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	jsr     aslax4
	jsr     pushax
	ldy     #$08
	jsr     ldaxysp
	jsr     tosaddax
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	ldy     #$00
	sta     (sp),y
L0002:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	jmp     L0001
L0001:	jsr     incsp7
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ IndexOfArenaVertex (struct $anon-struct-0009 *vertices, struct $anon-struct-0009 *vertex, int count)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_IndexOfArenaVertex: near

.segment	"CODE"

	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$06
	jsr     pushax
	lda     #<(_CompareArenaVertices)
	ldx     #>(_CompareArenaVertices)
	jsr     _bsearch
	jsr     pushax
	ldy     #$01
	lda     (sp),y
	dey
	ora     (sp),y
	jeq     L0002
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     tossubax
	jsr     pushax
	ldx     #$00
	lda     #$06
	jsr     tosdivax
	jmp     L0003
L0002:	ldx     #$FF
	lda     #$FF
L0003:	jmp     L0001
L0001:	jsr     incsp8
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ CompareArenaVertices (const void *p, const void *q)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CompareArenaVertices: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp2
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$05
	jsr     ldaxidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$05
	jsr     ldaxidx
	jsr     tossubax
	ldy     #$04
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	jsr     bnegax
	jeq     L0002
	ldy     #$03
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     tossubax
	ldy     #$04
	jsr     staxysp
L0002:	ldy     #$05
	jsr     ldaxysp
	jsr     bnegax
	jeq     L0003
	ldy     #$03
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     tossubax
	ldy     #$04
	jsr     staxysp
L0003:	ldy     #$05
	jsr     ldaxysp
	jmp     L0001
L0001:	ldy     #$0A
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; struct $anon-struct-000C *__near__ GetVehicleVertices (const char *vehicle, int limit)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_GetVehicleVertices: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp7
	lda     M0001
	ldx     M0001+1
	jsr     bnegax
	jeq     L0002
	ldy     #$08
	jsr     ldaxysp
	jsr     shlax1
	jsr     _malloc
	sta     M0001
	stx     M0001+1
L0002:	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$04
	jsr     staxysp
L0003:	ldy     #$01
	jsr     ldaxysp
	cmp     #$19
	txa
	sbc     #$00
	bvc     L0007
	eor     #$80
L0007:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0006
	jmp     L0004
L0006:	ldx     #$00
	lda     #$00
	ldy     #$02
	jsr     staxysp
L0008:	ldy     #$03
	jsr     ldaxysp
	cmp     #$19
	txa
	sbc     #$00
	bvc     L000C
	eor     #$80
L000C:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L000B
	jmp     L0005
L000B:	ldy     #$0A
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _VehicleCharacterAt
	ldy     #$06
	sta     (sp),y
	lda     _vehicle_vertices0
	ldx     _vehicle_vertices0+1
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	jeq     L000A
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	bpl     L000E
	dex
L000E:	ldy     #$00
	jsr     staspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	bpl     L000F
	dex
L000F:	ldy     #$01
	jsr     staspidx
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0A
	jsr     ldaxysp
	jsr     toseqax
	jeq     L000A
	lda     #<(S0032)
	ldx     #>(S0032)
	jsr     pushax
	lda     _stderr
	ldx     _stderr+1
	jsr     _fputs
	ldx     #$00
	lda     #$01
	jsr     _exit
L000A:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0008
L0005:	ldy     #$00
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0003
L0004:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	lda     #<(_CompareVehicleVertices)
	ldx     #>(_CompareVehicleVertices)
	jsr     _qsort
L0011:	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0A
	jsr     ldaxysp
	jsr     tosltax
	jne     L0014
	jmp     L0012
L0014:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldx     #$FF
	lda     #$FF
	ldy     #$00
	jsr     staspidx
	ldy     #$01
	jsr     staspidx
	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0011
L0012:	lda     M0001
	ldx     M0001+1
	jmp     L0001
L0001:	ldy     #$0B
	jsr     addysp
	rts

.segment	"DATA"

M0001:
	.word	$0000

.endproc

; ---------------------------------------------------------------
; int __near__ CountVehicleVertices (const char *vehicle)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CountVehicleVertices: near

.segment	"CODE"

	jsr     pushax
	ldx     #$00
	lda     #$00
	jsr     pushax
	jmp     L0004
L0002:	lda     _vehicle_vertices0
	ldx     _vehicle_vertices0+1
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$00
	jsr     ldauidx
	jsr     _strchr
	stx     tmp1
	ora     tmp1
	jeq     L0005
	ldy     #$00
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0005:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0004:	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	jsr     ldauidx
	jne     L0002
	ldy     #$01
	jsr     ldaxysp
	jmp     L0001
L0001:	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ OutputVehicleSegments (const char *vehicle, struct $anon-struct-000C *vertices, int limit, struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputVehicleSegments: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp8
	lda     M0001
	ldx     M0001+1
	jsr     bnegax
	jeq     L0002
	ldy     #$0B
	jsr     ldaxysp
	jsr     shlax2
	jsr     _malloc
	sta     M0001
	stx     M0001+1
L0002:	ldy     #$0F
	jsr     ldaxysp
	jsr     _CountVehicleVertices
	ldy     #$00
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$06
	jsr     staxysp
	ldx     #$00
	lda     #$00
	ldy     #$04
	jsr     staxysp
L0003:	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosltax
	jne     L0006
	jmp     L0004
L0006:	ldy     #$05
	jsr     ldaxysp
	ina
	bne     L000B
	inx
L000B:	ldy     #$02
	jsr     staxysp
L0007:	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosltax
	jne     L000A
	jmp     L0005
L000A:	ldy     #$0F
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     _VehicleVerticesAreConnected
	tax
	jeq     L0009
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$00
	jsr     staxspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$02
	jsr     staxspidx
	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0D
	jsr     ldaxysp
	jsr     toseqax
	jeq     L0009
	lda     #<(S0033)
	ldx     #>(S0033)
	jsr     pushax
	lda     _stderr
	ldx     _stderr+1
	jsr     _fputs
	ldx     #$00
	lda     #$01
	jsr     _exit
L0009:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0007
L0005:	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0003
L0004:	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0D
	jsr     ldaxysp
	jsr     tosltax
	jne     L0011
	jmp     L000F
L0011:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$0B
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldx     #$FF
	lda     #$FF
	ldy     #$02
	jsr     staxspidx
	ldy     #$00
	jsr     staxspidx
	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0004
L000F:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     _fwrite
	ldy     #$10
	jsr     addysp
	rts

.segment	"DATA"

M0001:
	.word	$0000

.endproc

; ---------------------------------------------------------------
; void __near__ OutputVehicleVertices (const char *vehicle, struct $anon-struct-000C *vertices, int limit, struct _FILE *ofile)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_OutputVehicleVertices: near

.segment	"CODE"

	jsr     pushax
	ldy     #$1C
	jsr     subysp
	lda     M0001
	ldx     M0001+1
	jsr     bnegax
	jeq     L0002
	ldy     #$1F
	jsr     ldaxysp
	jsr     shlax1
	jsr     _malloc
	sta     M0001
	stx     M0001+1
	ldx     #$00
	lda     #$80
	jsr     _malloc
	sta     M0002
	stx     M0002+1
	ldx     #$00
	lda     #$80
	jsr     _malloc
	sta     M0003
	stx     M0003+1
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$00
	ldy     #$10
	jsr     steaxysp
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	lda     #$00
	jsr     pusheax
	ldx     #$0F
	lda     #$49
	sta     sreg
	lda     #$40
	sta     sreg+1
	lda     #$DB
	jsr     _flt_multiply
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$42
	sta     sreg+1
	lda     #$00
	jsr     _flt_divide
	ldy     #$0C
	jsr     steaxysp
	ldx     #$00
	lda     #$00
	ldy     #$1A
	jsr     staxysp
L0003:	ldy     #$1B
	jsr     ldaxysp
	cmp     #$20
	txa
	sbc     #$00
	bvc     L0007
	eor     #$80
L0007:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0006
	jmp     L0004
L0006:	lda     M0002
	ldx     M0002+1
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$15
	jsr     ldeaxysp
	jsr     _flt_sin
	ldy     #$00
	jsr     steaxspidx
	lda     M0003
	ldx     M0003+1
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	jsr     pushax
	ldy     #$15
	jsr     ldeaxysp
	jsr     _flt_cos
	ldy     #$00
	jsr     steaxspidx
	ldy     #$1A
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	lda     #$10
	jsr     leaa0sp
	jsr     pushax
	ldy     #$11
	jsr     ldeaxysp
	jsr     _flt_add_into
	jmp     L0003
L0004:	ldx     #$00
	lda     #$2A
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputc
L0002:	ldy     #$23
	jsr     ldaxysp
	jsr     _CountVehicleVertices
	ldy     #$14
	jsr     staxysp
	ldx     #$00
	lda     #$90
	sta     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	jsr     pusheax
	ldx     #$00
	lda     #$10
	sta     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	jsr     _flt_subtract
	jsr     pusheax
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$07
	jsr     _flt_ltof
	jsr     _flt_divide
	ldy     #$0C
	jsr     steaxysp
	ldx     #$00
	lda     #$00
	ldy     #$16
	jsr     staxysp
	ldx     #$00
	lda     #$90
	sta     sreg
	lda     #$3F
	sta     sreg+1
	lda     #$00
	ldy     #$08
	jsr     steaxysp
L0008:	ldy     #$17
	jsr     ldaxysp
	cmp     #$08
	txa
	sbc     #$00
	bvc     L000C
	eor     #$80
L000C:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L000B
	jmp     L0009
L000B:	ldx     #$00
	lda     #$00
	ldy     #$1A
	jsr     staxysp
L000D:	ldy     #$1B
	jsr     ldaxysp
	cmp     #$20
	txa
	sbc     #$00
	bvc     L0011
	eor     #$80
L0011:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0010
	jmp     L000E
L0010:	ldx     #$00
	lda     #$00
	ldy     #$18
	jsr     staxysp
L0012:	ldy     #$19
	jsr     ldaxysp
	jsr     pushax
	ldy     #$17
	jsr     ldaxysp
	jsr     tosltax
	jne     L0015
	jmp     L0013
L0015:	ldy     #$21
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1B
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	ldy     #$00
	jsr     ldaidx
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	lda     #$48
	sta     sreg
	lda     #$41
	sta     sreg+1
	lda     #$00
	jsr     _flt_subtract
	ldy     #$04
	jsr     steaxysp
	ldy     #$21
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1B
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	ldy     #$01
	jsr     ldaidx
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	lda     #$48
	sta     sreg
	lda     #$41
	sta     sreg+1
	lda     #$00
	jsr     _flt_subtract
	ldy     #$00
	jsr     steaxysp
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1B
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	lda     M0003
	ldx     M0003+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	ldy     #$03
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$0D
	jsr     ldeaxysp
	jsr     _flt_multiply
	jsr     pusheax
	lda     M0002
	ldx     M0002+1
	jsr     pushax
	ldy     #$23
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	ldy     #$03
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$0D
	jsr     ldeaxysp
	jsr     _flt_multiply
	jsr     _flt_subtract
	jsr     pusheax
	ldy     #$11
	jsr     ldeaxysp
	jsr     _flt_divide
	jsr     _flt_round
	jsr     _flt_ftol
	ldx     #$00
	cmp     #$80
	bcc     L0016
	dex
L0016:	ldy     #$00
	jsr     staspidx
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1B
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	lda     M0002
	ldx     M0002+1
	jsr     pushax
	ldy     #$1F
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	ldy     #$03
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$0D
	jsr     ldeaxysp
	jsr     _flt_multiply
	jsr     pusheax
	lda     M0003
	ldx     M0003+1
	jsr     pushax
	ldy     #$23
	jsr     ldaxysp
	jsr     aslax2
	jsr     tosaddax
	ldy     #$03
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$0D
	jsr     ldeaxysp
	jsr     _flt_multiply
	jsr     _flt_add
	jsr     pusheax
	ldy     #$11
	jsr     ldeaxysp
	jsr     _flt_divide
	jsr     _flt_round
	jsr     _flt_ftol
	ldx     #$00
	cmp     #$80
	bcc     L0017
	dex
L0017:	ldy     #$01
	jsr     staspidx
	ldy     #$18
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0012
L0013:	ldy     #$19
	jsr     ldaxysp
	jsr     pushax
	ldy     #$21
	jsr     ldaxysp
	jsr     tosltax
	jne     L001B
	jmp     L0019
L001B:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1B
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldy     #$1D
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldx     #$FF
	lda     #$FF
	ldy     #$01
	jsr     staspidx
	ldy     #$00
	jsr     staspidx
	ldy     #$18
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0013
L0019:	lda     M0001
	ldx     M0001+1
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$23
	jsr     ldaxysp
	jsr     pushax
	ldy     #$23
	jsr     ldaxysp
	jsr     _fwrite
	ldy     #$1A
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L000D
L000E:	ldx     #$00
	lda     #$2A
	jsr     pushax
	lda     _stdout
	ldx     _stdout+1
	jsr     _fputc
	ldy     #$16
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	lda     #$08
	jsr     leaa0sp
	jsr     pushax
	ldy     #$11
	jsr     ldeaxysp
	jsr     _flt_subtract_into
	jmp     L0008
L0009:	ldy     #$24
	jsr     addysp
	rts

.segment	"DATA"

M0001:
	.word	$0000

.segment	"BSS"

M0002:
	.res	2,$00
M0003:
	.res	2,$00

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ VehicleVerticesAreConnected (const char *vehicle, struct $anon-struct-000C *v1, struct $anon-struct-000C *v2)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VehicleVerticesAreConnected: near

.segment	"CODE"

	jsr     pushax
	ldy     #$1C
	jsr     subysp
	ldx     #$00
	lda     #$00
	jsr     pushax
	ldy     #$21
	jsr     ldaxysp
	ldy     #$00
	jsr     ldaidx
	jsr     pushax
	ldy     #$21
	jsr     ldaxysp
	ldy     #$00
	jsr     ldaidx
	jsr     tosaddax
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	lda     #$00
	jsr     _flt_divide
	ldy     #$12
	jsr     steaxysp
	ldy     #$21
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaidx
	jsr     pushax
	ldy     #$21
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaidx
	jsr     tosaddax
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	lda     #$00
	jsr     _flt_divide
	ldy     #$0E
	jsr     steaxysp
	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxysp
	ldx     #$FF
	lda     #$FF
	ldy     #$02
	jsr     staxysp
L0002:	ldy     #$03
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L0006
	eor     #$80
L0006:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0005
	jmp     L0003
L0005:	ldx     #$FF
	lda     #$FF
	ldy     #$04
	jsr     staxysp
L0007:	ldy     #$05
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L000B
	eor     #$80
L000B:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L000A
	jmp     L0004
L000A:	ldy     #$23
	jsr     ldaxysp
	jsr     pushax
	ldy     #$17
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0B
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     _flt_add
	jsr     _flt_ftol
	jsr     pushax
	ldy     #$15
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0B
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     _flt_add
	jsr     _flt_ftol
	jsr     _VehicleCharacterAt
	cmp     #$20
	jsr     boolne
	jeq     L0009
	ldy     #$00
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0009:	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0007
L0004:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0002
L0003:	ldy     #$01
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L000E
	eor     #$80
L000E:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L000D
	ldx     #$00
	lda     #$00
	jmp     L0001
L000D:	ldy     #$21
	jsr     ldaxysp
	ldy     #$00
	jsr     ldaidx
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldy     #$19
	jsr     ldeaxysp
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	lda     #$00
	jsr     _flt_divide
	ldy     #$1A
	jsr     steaxysp
	ldy     #$21
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaidx
	jsr     axlong
	jsr     _flt_ltof
	jsr     pusheax
	ldy     #$15
	jsr     ldeaxysp
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	lda     #$00
	jsr     _flt_divide
	ldy     #$16
	jsr     steaxysp
	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxysp
	ldx     #$FF
	lda     #$FF
	ldy     #$02
	jsr     staxysp
L000F:	ldy     #$03
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L0013
	eor     #$80
L0013:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0012
	jmp     L0010
L0012:	ldx     #$FF
	lda     #$FF
	ldy     #$04
	jsr     staxysp
L0014:	ldy     #$05
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L0018
	eor     #$80
L0018:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0017
	jmp     L0011
L0017:	ldy     #$23
	jsr     ldaxysp
	jsr     pushax
	ldy     #$1F
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0B
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     _flt_add
	jsr     _flt_ftol
	jsr     pushax
	ldy     #$1D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0B
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     _flt_add
	jsr     _flt_ftol
	jsr     _VehicleCharacterAt
	cmp     #$20
	jsr     boolne
	jeq     L0016
	ldy     #$00
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0016:	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0014
L0011:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L000F
L0010:	ldy     #$01
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L001B
	eor     #$80
L001B:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L001A
	ldx     #$00
	lda     #$00
	jmp     L0001
L001A:	ldy     #$15
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$23
	jsr     ldaxysp
	ldy     #$00
	jsr     ldaidx
	jsr     axlong
	jsr     _flt_ltof
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	lda     #$00
	jsr     _flt_divide
	ldy     #$0A
	jsr     steaxysp
	ldy     #$11
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$23
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaidx
	jsr     axlong
	jsr     _flt_ltof
	jsr     _flt_add
	jsr     pusheax
	ldx     #$00
	stx     sreg
	lda     #$40
	sta     sreg+1
	lda     #$00
	jsr     _flt_divide
	ldy     #$06
	jsr     steaxysp
	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxysp
	ldx     #$FF
	lda     #$FF
	ldy     #$02
	jsr     staxysp
L001C:	ldy     #$03
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L0020
	eor     #$80
L0020:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L001F
	jmp     L001D
L001F:	ldx     #$FF
	lda     #$FF
	ldy     #$04
	jsr     staxysp
L0021:	ldy     #$05
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L0025
	eor     #$80
L0025:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0024
	jmp     L001E
L0024:	ldy     #$23
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0F
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0B
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     _flt_add
	jsr     _flt_ftol
	jsr     pushax
	ldy     #$0D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$0B
	jsr     ldaxysp
	jsr     axlong
	jsr     _flt_ltof
	jsr     _flt_add
	jsr     _flt_ftol
	jsr     _VehicleCharacterAt
	cmp     #$20
	jsr     boolne
	jeq     L0023
	ldy     #$00
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0023:	ldy     #$04
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0021
L001E:	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L001C
L001D:	ldy     #$01
	jsr     ldaxysp
	cmp     #$02
	txa
	sbc     #$00
	bvc     L0028
	eor     #$80
L0028:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L0027
	ldx     #$00
	lda     #$00
	jmp     L0001
L0027:	ldx     #$00
	lda     #$01
	jmp     L0001
L0001:	ldy     #$24
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; char __near__ VehicleCharacterAt (const char *vehicle, int x, int y)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_VehicleCharacterAt: near

.segment	"CODE"

	jsr     pushax
	lda     #$20
	jsr     pusha
	ldy     #$02
	jsr     ldaxysp
	txa
	jsr     boolge
	jeq     L0003
	ldy     #$02
	jsr     ldaxysp
	cmp     #$19
	txa
	sbc     #$00
	bvc     L0004
	eor     #$80
L0004:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L0003
	ldy     #$04
	jsr     ldaxysp
	txa
	jsr     boolge
	jeq     L0003
	ldy     #$04
	jsr     ldaxysp
	cmp     #$19
	txa
	sbc     #$00
	bvc     L0005
	eor     #$80
L0005:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0006
L0003:	ldx     #$00
	lda     #$00
	jeq     L0007
L0006:	ldx     #$00
	lda     #$01
L0007:	jeq     L0002
	ldy     #$06
	jsr     ldaxysp
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$19
	jsr     tosmulax
	jsr     pushax
	ldy     #$08
	jsr     ldaxysp
	jsr     tosaddax
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	ldy     #$00
	sta     (sp),y
L0002:	ldy     #$00
	ldx     #$00
	lda     (sp),y
	jmp     L0001
L0001:	jsr     incsp7
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ CompareVehicleVertices (const void *p, const void *q)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_CompareVehicleVertices: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp1
	ldy     #$04
	jsr     ldaxysp
	jsr     pushax
	ldy     #$04
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	jsr     ldaidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$00
	jsr     ldaidx
	jsr     tossubax
	ldx     #$00
	cmp     #$80
	bcc     L0002
	dex
L0002:	ldy     #$04
	sta     (sp),y
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	bpl     L0004
	dex
L0004:	jsr     bnega
	jeq     L0003
	ldy     #$03
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaidx
	jsr     tossubax
	ldx     #$00
	cmp     #$80
	bcc     L0005
	dex
L0005:	ldy     #$04
	sta     (sp),y
L0003:	ldy     #$04
	ldx     #$00
	lda     (sp),y
	bpl     L0006
	dex
L0006:	jmp     L0001
L0001:	ldy     #$09
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     decsp2
	lda     #<(S001A)
	ldx     #>(S001A)
	jsr     pushax
	lda     #<(S001B)
	ldx     #>(S001B)
	jsr     _fopen
	ldy     #$00
	jsr     staxysp
	jsr     bnegax
	jeq     L0002
	lda     #<(S001C)
	ldx     #>(S001C)
	jsr     pushax
	lda     _stderr
	ldx     _stderr+1
	jsr     _fputs
	ldx     #$00
	lda     #$01
	jmp     L0001
L0002:	ldy     #$01
	jsr     ldaxysp
	jsr     _OutputStrings
	ldy     #$01
	jsr     ldaxysp
	jsr     _OutputTrigData
	ldy     #$01
	jsr     ldaxysp
	jsr     _OutputArenaData
	ldy     #$01
	jsr     ldaxysp
	jsr     _OutputVehicleData
	ldy     #$01
	jsr     ldaxysp
	jsr     _OutputLevelData
	ldx     #$00
	lda     #$06
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     _fputc
	ldy     #$01
	jsr     ldaxysp
	jsr     _fclose
	ldx     #$00
	lda     #$00
	jmp     L0001
L0001:	jsr     incsp2
	rts

.endproc

